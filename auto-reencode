#!/bin/bash
# Run this script in the dir containing the target files you wish to convert
# to x264.  There are no arguments.  
# The script will copy both the audio and video bitrates into the new file 
# via metadata from mediainfo and will retain the original DTS for you.

ostype() { echo "$OSTYPE" | tr '[A-Z]' '[a-z]'; }

case "$(ostype)" in
    *'linux'* ) SHELL_PLATFORM='linux' ;;
    *'darwin'*) SHELL_PLATFORM='osx'   ;;
    *'bsd'*   ) SHELL_PLATFORM='bsd'   ;;
esac

shell_is_linux() { [[ "$SHELL_PLATFORM" == 'linux' || "$SHELL_PLATFORM" == 'bsd' ]]; }
shell_is_osx()   { [[ "$SHELL_PLATFORM" == 'osx' ]]; }
shell_is_bsd()   { [[ "$SHELL_PLATFORM" == 'bsd' || "$SHELL_PLATFORM" == 'osx' ]]; }

IFS=$'\012'
echo 'Enter target file extension [flv,wmv]:'
read EXT

[[ -z "$EXT" ]] && EXT="flv"

if [[ $(find . ! -name . -prune -type f -name "*.$EXT" 2>/dev/null | grep -q .) -gt 0 ]]; then
	echo "Cannot find any .$EXT files so trying .wmv"
fi

EXT="wmv"
if [[ $(find . ! -name . -prune -type f -name "*.$EXT" 2>/dev/null | grep -q .) -gt 0 ]]; then
	echo "Cannot find any .$EXT files so exiting."
	exit 1
fi

total=$(find . ! -name . -prune -type f -name "*.$EXT"|wc -l)
n=0
for file in $(find . ! -name . -prune -type f -name "*.$EXT"); do
	# capture the dts on the target file
    if shell_is_osx || shell_is_bsd; then
        target_dts=$(stat -f "%m" "$file")
    elif shell_is_linux; then
        target_dts=$(stat -c "%Y" "$file")
    fi

	# find bitrate for video and audio
	vkbps=$(expr $(mediainfo --inform="Video;%BitRate%" "$file") / 1000)
	akbps=$(expr $(mediainfo --inform="Audio;%BitRate%" "$file") / 1000)

	n=$(( $n + 1 ))
	echo "Task $n of $total"
	echo " file to encode : ${file%.*}"|sed 's|./||'
	echo " video bitrate  : $vkbps kbps"
	echo " audio bitrate  : $akbps kbps"
	
	# do not overwrite existing files
	if [[ -e "${file%.*}.mp4" ]]; then
		echo >&2 Output file already exists: "${file%.*}.mp4"
		echo >&2 Skipping...
		echo >&2
		continue
	fi

	# encode
	HandBrakeCLI -i "${file}" -o "${file%.*}.mp4" --encoder x264 bframes=2:subme=6:mixed-refs=0:weightb=0:ref=5:8x8dct:me=umh:direct=spatial:trellis=0:b-adapt=2 -5 --vb "${vkbps}" -2 -T --aencoder faac -B "${akbps}" 2>/dev/null || rm -f -- "${file%.*}.mp4"
	echo 

	# restore dts
	touch -r "$file" "${file%.*}.mp4"
done
